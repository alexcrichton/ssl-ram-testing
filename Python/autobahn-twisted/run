#!py27/bin/python
import os

from autobahn.twisted.websocket import WebSocketServerProtocol, \
    WebSocketServerFactory, listenWS
from twisted.internet import reactor

from ssl_settings import SSLContextFactory

PORT = int(os.environ.get("SERVER_PORT", "9000"))


class MyServerProtocol(WebSocketServerProtocol):
    def onMessage(self, payload, isBinary):
        self.sendMessage(payload, isBinary)


if __name__ == '__main__':
    if os.environ.get("USE_SSL"):
        factory = WebSocketServerFactory("wss://localhost:%s" % PORT,
                                         debug=False)
        factory.protocol = MyServerProtocol
        ctx_factory = SSLContextFactory("../../keys/server.key",
                                        "../../keys/server.crt")
        listenWS(factory, ctx_factory)
    else:
        factory = WebSocketServerFactory("ws://localhost:%s" % PORT,
                                         debug=False)
        factory.protocol = MyServerProtocol
        reactor.listenTCP(PORT, factory)
    print "Running"
    reactor.run()
