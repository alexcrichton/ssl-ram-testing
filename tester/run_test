#!/usr/bin/env python2.7
"""SSL RAM Overhead Tester

Usage:
    run_test.py <test_dir>

Options:
    -h --help       Show this screen.

"""
import os
import os.path
import shlex
import subprocess
import time

from docopt import docopt


class Process(object):
    """Simplify running of the test process"""
    def __init__(self, command, env=None):
        parts = os.path.split(command)
        rel_dir, cmd = [os.path.join(*parts[:-1]), parts[-1]]
        self.process_dir = os.path.join(os.path.abspath(os.getcwd()),
                                        rel_dir)
        self.env = env or os.environ
        self.command = shlex.split(os.path.join(self.process_dir, cmd))
        self.proc = None
        if not os.path.exists(command):
            raise Exception("Unable to find command: %s" % command)

    def run(self):
        self.proc = subprocess.Popen(self.command,
                                     cwd=self.process_dir,
                                     env=self.env)

    def terminate(self):
        if self.proc:
            self.proc.terminate()

    def is_running(self):
        """Indicate if the program is running."""
        return not self.proc or self.proc.poll() is None


if __name__ == '__main__':
    arguments = docopt(__doc__, version='SSL RAM Overhead Tester 1.0')
    script_name = os.path.join(arguments["<test_dir>"], "run.py")
    if not os.path.exists(script_name):
        raise Exception("Failed to find program: %s" % script_name)

    program = Process(script_name)
    program.run()
    time.sleep(1)
    if not program.is_running():
        raise Exception("What program?")
    time.sleep(20)
    program.terminate()
